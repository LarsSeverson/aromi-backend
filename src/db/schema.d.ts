/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type FragranceTraitEnum = "allure" | "balance" | "complexity" | "gender" | "longevity" | "sillage";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type ImageFormat = "jpg" | "png";

export type NoteLayerEnum = "base" | "middle" | "top";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Accord {
  color: Generated<string>;
  createdAt: Timestamp;
  deletedAt: Timestamp | null;
  id: Generated<number>;
  name: string;
  updatedAt: Timestamp;
}

export interface CollectionFragrance {
  collectionId: number;
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  fragranceId: number;
  id: Generated<number>;
  updatedAt: Generated<Timestamp | null>;
}

export interface FragranceAccord {
  accordId: number;
  createdAt: Timestamp;
  deletedAt: Timestamp | null;
  fragranceId: number;
  id: Generated<number>;
  updatedAt: Timestamp;
  votes: Generated<number>;
}

export interface FragranceAccordVote {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  fragranceAccordId: number;
  id: Generated<number>;
  updatedAt: Generated<Timestamp | null>;
  userId: number;
}

export interface FragranceCollection {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  id: Generated<number>;
  name: string;
  updatedAt: Generated<Timestamp | null>;
  userId: number | null;
}

export interface FragranceImage {
  createdAt: Timestamp;
  deletedAt: Timestamp | null;
  format: ImageFormat;
  fragranceId: number;
  id: Generated<number>;
  s3Key: string;
  updatedAt: Timestamp;
}

export interface FragranceNote {
  createdAt: Timestamp;
  deletedAt: Timestamp | null;
  fragranceId: number;
  id: Generated<number>;
  layer: NoteLayerEnum;
  noteId: number;
  updatedAt: Timestamp;
  votes: Generated<number>;
}

export interface FragranceNoteVote {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  fragranceNoteId: number;
  id: Generated<number>;
  updatedAt: Generated<Timestamp | null>;
  userId: number;
}

export interface FragranceReview {
  createdAt: Generated<Timestamp>;
  deletedAt: Timestamp | null;
  dislikesCount: Generated<number>;
  fragranceId: number;
  id: Generated<number>;
  likesCount: Generated<number>;
  rating: number;
  reviewText: string;
  updatedAt: Generated<Timestamp>;
  userId: number;
  voteScore: Generated<number>;
}

export interface FragranceReviewVote {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  fragranceReviewId: number;
  id: Generated<number>;
  updatedAt: Generated<Timestamp | null>;
  userId: number;
  vote: number;
}

export interface Fragrance {
  brand: string;
  createdAt: Timestamp;
  deletedAt: Timestamp | null;
  dislikesCount: number;
  id: Generated<number>;
  likesCount: number;
  name: string;
  rating: number | null;
  reviewsCount: number;
  updatedAt: Timestamp;
  voteScore: Generated<number>;
}

export interface FragranceTrait {
  createdAt: Timestamp;
  deletedAt: Timestamp | null;
  fragranceId: number;
  id: Generated<number>;
  trait: FragranceTraitEnum;
  updatedAt: Timestamp;
  value: Generated<number>;
}

export interface FragranceTraitVote {
  createdAt: Generated<Timestamp>;
  deletedAt: Timestamp | null;
  fragranceTraitId: number;
  id: Generated<number>;
  updatedAt: Generated<Timestamp>;
  userId: number;
  value: number;
}

export interface FragranceVote {
  createdAt: Generated<Timestamp | null>;
  deletedAt: Timestamp | null;
  fragranceId: number;
  id: Generated<number>;
  updatedAt: Generated<Timestamp | null>;
  userId: number;
  vote: number;
}

export interface Note {
  createdAt: Timestamp;
  deletedAt: Timestamp | null;
  id: Generated<number>;
  name: string;
  s3Key: Generated<string>;
  updatedAt: Timestamp;
}

export interface User {
  cognitoId: string | null;
  createdAt: Timestamp | null;
  deletedAt: Timestamp | null;
  email: Generated<string>;
  followerCount: Generated<number>;
  followingCount: Generated<number>;
  id: Generated<number>;
  updatedAt: Timestamp | null;
  username: string;
}

export interface DB {
  accords: Accord;
  collectionFragrances: CollectionFragrance;
  fragranceAccords: FragranceAccord;
  fragranceAccordVotes: FragranceAccordVote;
  fragranceCollections: FragranceCollection;
  fragranceImages: FragranceImage;
  fragranceNotes: FragranceNote;
  fragranceNoteVotes: FragranceNoteVote;
  fragranceReviews: FragranceReview;
  fragranceReviewVotes: FragranceReviewVote;
  fragrances: Fragrance;
  fragranceTraits: FragranceTrait;
  fragranceTraitVotes: FragranceTraitVote;
  fragranceVotes: FragranceVote;
  notes: Note;
  users: User;
}
