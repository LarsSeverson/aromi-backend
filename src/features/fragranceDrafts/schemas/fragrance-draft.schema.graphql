type FragranceDraft {
  id: ID!
  version: Int!

  name: String
  description: String
  releaseYear: Int
  concentration: Concentration
  status: FragranceStatus

  image: FragranceDraftImage

  traits: [FragranceDraftTrait!]!
  trait(type: TraitTypeEnum!): FragranceDraftTrait!

  accords: [Accord!]!

  user: User!
}

type FragranceDraftEdge {
  node: FragranceDraft!
  cursor: String!
}

type FragranceDraftConnection {
  edges: [FragranceDraftEdge!]!
  pageInfo: PageInfo!
}

input CreateFragranceDraftInput {
  name: String
  description: String
  releaseYear: Int
  concentration: Concentration
  status: FragranceStatus
}

input UpdateFragranceDraftInput {
  id: ID!
  version: Int!
  name: String
  description: String
  releaseYear: Int
  concentration: Concentration
  status: FragranceStatus
}

input DeleteFragranceDraftInput {
  id: ID!
}

extend type Query {
  fragranceDraft(id: ID!): FragranceDraft!
  fragranceDrafts(input: DraftPaginationInput): FragranceDraftConnection!
}

extend type Mutation {
  createFragranceDraft(input: CreateFragranceDraftInput!): FragranceDraft!
  updateFragranceDraft(input: UpdateFragranceDraftInput!): FragranceDraft!
  deleteFragranceDraft(input: DeleteFragranceDraftInput!): FragranceDraft!
}
