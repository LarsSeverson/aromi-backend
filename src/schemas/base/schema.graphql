type Query
type Mutation

scalar Date
scalar JSON

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Audit {
  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date
}

type VoteSummary {
  voteScore: Int!
  likesCount: Int!
  dislikesCount: Int!
  myVote: Boolean
}

input SortByInput {
  by: SortBy = updatedAt
  direction: SortDirection = DESCENDING
}

input PaginationInput {
  first: Int
  after: String
  sort: SortByInput
}

input VotePaginationInput {
  first: Int
  after: String
  sort: VoteSortByInput
}

input VoteSortByInput {
  by: VoteSortBy = updatedAt
  direction: SortDirection = DESCENDING
}

enum SortDirection {
  ASCENDING
  DESCENDING
}

enum SortBy {
  UPDATED
}

enum VoteSortBy {
  UPDATED
  VOTES
}
