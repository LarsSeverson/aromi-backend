type User {
  id: Int!
  username: String!
  email: String!

  followerCount: Int!
  followingCount: Int!

  collections(input: PaginationInput): FragranceCollectionConnection!
  likes(input: PaginationInput): FragranceVoteConnection!
  reviews(input: PaginationInput): FragranceReviewConnection!

  audit: Audit!
}

extend type Query {
  me: User
  user(id: Int!): User
}

extend type Mutation {
  presignUserAvatar(input: PresignUserAvatarInput!): PresignUploadPayload!
  updateUserAvatar(input: UpdateUserAvatarInput!): String!
}

type PresignUserAvatarInput {
  userId: Int!
  fileType: String!
  fileName: String!
  fileSize: Int!
}

type UpdateUserAvatarInput {
  userId: Int!
  s3Key: String!
}
