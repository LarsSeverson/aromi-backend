type AccordRequest {
  id: ID!
  version: Int!
  requestStatus: RequestStatus!

  name: String
  description: String
  color: String

  image: AccordRequestImage

  votes: VoteInfo!

  user: User!
}

type AccordRequestEdge {
  node: AccordRequest!
  cursor: String!
}

type AccordRequestConnection {
  edges: [AccordRequestEdge!]!
  pageInfo: PageInfo!
}

input CreateAccordRequestInput {
  name: String
  description: String
  color: String
}

input UpdateAccordRequestInput {
  id: ID!
  version: Int!
  name: String
  description: String
  color: String
}

input DeleteAccordRequestInput {
  id: ID!
}

input SubmitAccordRequestInput {
  id: ID!
}

extend type Query {
  accordRequest(id: ID!): AccordRequest!
  accordRequests(input: RequestPaginationInput): AccordRequestConnection!
}

extend type Mutation {
  createAccordRequest(input: CreateAccordRequestInput!): AccordRequest!
  updateAccordRequest(input: UpdateAccordRequestInput!): AccordRequest!
  deleteAccordRequest(input: DeleteAccordRequestInput!): AccordRequest!

  submitAccordRequest(input: SubmitAccordRequestInput!): AccordRequest!
}
