type FragranceAccord {
  id: ID!
  accord: Accord!
  votes: VoteInfo!
}

type FragranceAccordEdge {
  node: FragranceAccord!
  cursor: String!
}

type FragranceAccordConnection {
  edges: [FragranceAccordEdge!]!
  pageInfo: PageInfo!
}

enum FragranceAccordSortBy {
  VOTES
}

input FragranceAccordSortInput {
  direction: SortDirection
  by: FragranceAccordSortBy
}

input FragranceAccordPaginationInput {
  first: Int
  after: String
  sort: FragranceAccordSortInput
}

input VoteOnFragranceAccordInput {
  fragranceId: ID!
  accordId: ID!
  vote: Int!
}

extend type Mutation {
  voteOnFragranceAccord(input: VoteOnFragranceAccordInput!): Accord!
}