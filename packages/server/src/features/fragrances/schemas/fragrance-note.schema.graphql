enum NoteLayer {
  TOP
  MIDDLE
  BASE
}

type FragranceNote {
  id: ID!
  note: Note!
  layer: NoteLayer!
  votes: VoteInfo!
}

type FragranceNoteEdge {
  node: FragranceNote!
  cursor: String!
}

type FragranceNoteConnection {
  edges: [FragranceNoteEdge!]!
  pageInfo: PageInfo!
}

enum FragranceNoteSortBy {
  VOTES
}

input FragranceNoteSortInput {
  direction: SortDirection
  by: FragranceNoteSortBy
}

input FragranceNotePaginationInput {
  layer: NoteLayer
  first: Int
  after: String
  sort: FragranceNoteSortInput
}

input VoteOnFragranceNoteInput {
  fragranceId: ID!
  noteId: ID!
  layer: NoteLayer!
  vote: Int!
}

extend type Mutation {
  voteOnFragranceNote(input: VoteOnFragranceNoteInput!): Note!
}
